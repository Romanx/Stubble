trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - "*.md"
    - "docs/*"
    - "version.json"

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macOS-latest'
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

steps:
  - checkout: self
    submodules: true
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: sdk
      useGlobalJson: true
  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'restore'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      custom: 'cake'
    env:
      CODECOV_REPO_TOKEN: $(CODECOV_REPO_TOKEN)
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunTitle: 'Tests $(Agent.JobName)'
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      mergeTestResults: true
  - task: PublishCodeCoverageResults@1
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'coverage-results/*.cobertura.xml'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'artifacts/'
      ArtifactName: 'drop'
      publishLocation: 'Container'